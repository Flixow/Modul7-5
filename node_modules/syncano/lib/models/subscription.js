'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stampit = require('stampit');

var _stampit2 = _interopRequireDefault(_stampit);

var _base = require('./base');

var _querySet = require('../querySet');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SubscriptionQuerySet = (0, _stampit2.default)().compose(_querySet.BaseQuerySet, _querySet.Get, _querySet.List).methods({
  cancel: function cancel() {
    var properties = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var payload = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    this.properties = _.assign({}, this.properties, properties);
    this.method = 'POST';
    this.payload = { payload: payload };
    this.endpoint = 'cancel';

    return this;
  }
});

var SubscriptionMeta = (0, _base.Meta)({
  name: 'subscription',
  pluralName: 'subscriptions',
  endpoints: {
    'detail': {
      'methods': ['get'],
      'path': '/v1.1/billing/subscriptions/{id}/'
    },
    'list': {
      'methods': ['get'],
      'path': '/v1.1/billing/subscriptions/'
    },
    'cancel': {
      'methods': ['post'],
      'path': '/v1.1/billing/subscriptions/{id}/cancel/'
    }
  }
});
/**
 * OO wrapper around Subscription.
 * @constructor
 * @type {Subscription}

 * @property {String} end
 * @property {String} commitment
 * @property {String} start
 * @property {String} pricing
 * @property {Number} id
 * @property {String} plan
 */
var Subscription = (0, _stampit2.default)().compose(_base.Model).setQuerySet(SubscriptionQuerySet).setMeta(SubscriptionMeta).methods({
  cancel: function cancel() {
    var payload = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    var meta = this.getMeta();
    var path = meta.resolveEndpointPath('cancel', this);

    return this.makeRequest('POST', path, { payload: payload });
  }
});

exports.default = Subscription;
module.exports = exports['default'];